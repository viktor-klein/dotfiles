" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" [[ Setting options ]]

" Source your .vimrc
source ~/.vimrc

" use the clipboard as the unnamed register
set clipboard=unnamedplus,ideaput

" columns to highlight
set colorcolumn=+0

" highlight matches with last search pattern
set hlsearch

" highlight match while typing search pattern
set incsearch

" maximum width of text that is being inserted
set textwidth=100

" long lines wrap and continue on the next line
" set wrap

" When enabled, join commands will be handled by the IDE's "smart join" feature.
set ideajoin

" [[ Basic Keymaps ]]

" TODO: default-mappings
" TODO: lsp-defaults

:imap <C-S> <Action>(ParameterInfo)
:nmap K <Action>(QuickJavaDoc)
:nmap [d <Action>(GotoPreviousError)
:nmap ]d <Action>(GotoNextError)
:nmap <C-W>d <Action>(ActivateProblemsViewToolWindow)

:nmap gO <Action>(GotoSymbol)
:nmap gra <Action>(ShowIntentionActions)
:nmap grf <Action>(Refactorings.QuickListPopupAction)
:nmap grg <Action>(Generate)
:nmap gri <Action>(GotoImplementation)
:nmap grn <Action>(RenameElement)
:nmap grr <Action>(FindUsages)
:nmap grs <Action>(GotoSuperMethod)
:nmap grt <Action>(GotoTypeDeclaration)

:nmap ]c <Action>(VcsShowNextChangeMarker)
:nmap [c <Action>(VcsShowPrevChangeMarker)
:nmap <leader>hr <Action>(Vcs.RollbackChangedLines)
:nmap <leader>hR <Action>(ChangesView.Revert)
:nmap <leader>hc <Action>(CheckinFiles)
:nmap <leader>hd <Action>(Compare.SameVersion)
:nmap <leader>tb <Action>(Annotate)

:nmap <leader>sc <Action>(GotoClass)
:nmap <leader>sf <Action>(GotoFile)
:nmap <leader>sa <Action>(GotoAction)
:nmap <leader>st <Action>(TextSearchAction)
:nmap <leader>s. <Action>(RecentFiles)
:nmap <leader>sp <Action>(FindInPath)
:nmap <leader>/ <Action>(Find)
:nmap <leader>f <Action>(ShowReformatFileDialog)

" [[ Configure plugins ]]

" Adds mapping for quickly commenting stuff out
set commentary

" Highlights the yanked region
set highlightedyank

" Extends the % key functionality
set matchit

" Better Around/Inside textobjects
"
" Examples:
"  - va)  - [V]isually select [A]round [)]paren
"  - yinq - [Y]ank [I]nside [N]ext [Q]uote
"  - ci'  - [C]hange [I]nside [']quote
set mini-ai

" Add/delete/replace surroundings (brackets, quotes, etc.)
"
" - ysiw) - [S]urround [Y]ank [I]nner [W]ord [)]Paren
" - ds'   - [S]urround [D]elete [']quotes
" - cs)'  - [S]urround [C]change [)] [']
set surround

set which-key
" display default actions
let g:WhichKey_ShowVimActions = "true"
" disable the timeout option
set notimeout

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
" set scrolloff=5

" Do incremental searching.
" set incsearch

" Don't use Ex mode, use Q for formatting.
" map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
" Plug 'machakann/vim-highlightedyank'
" Commentary plugin
" Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
